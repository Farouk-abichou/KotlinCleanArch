[versions]
accompanistPermissions = "0.31.2-alpha"
exifinterface = "1.3.6"
glide = "4.10.0"
kotlin = "1.8.20"
agp = "8.0.2"
compose = "1.4.1"
compose-ui = "1.5.4"
compose-compiler = "1.4.6"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.8.1"
androidx-constraintLayout = "2.1.4"
compose-material = "1.6.0-beta01"
compose-material3 = "1.2.0-alpha11"
compose-uitooling = "1.5.4"
ffmpegKitFullGpl = "5.1"
media3 = "1.2.0"
napier = "2.6.1"
buildConfig = "3.1.0"
kotlinx-coroutines = "1.7.3"
ktor = "2.3.5"
kotlinx-serialization = "1.6.0"
kotlinx-datetime = "0.4.1"
multiplatformSettings = "1.0.0"
koin = "3.5.0"
koin-annotations = "1.2.2"
navigationCompose = "2.7.5"
sqlDelight = "2.0.0"
detekt = "1.22.0"
coil = "2.3.0"
ksp = "1.0.8"
logbackClassic = "1.3.0"
uiUtil = "1.5.4"
uuid = "0.8.1"
assertk = "0.26.1"
turbine = "0.13.0"
androidx-lifecycle = "2.6.2"
okio = "3.5.0"
material3WindowSizeClass = "1.1.2"
exoplayer = "2.19.1"

[libraries]

# AndroidX
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintLayout" }
androidx-exifinterface = { module = "androidx.exifinterface:exifinterface", version.ref = "exifinterface" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
androidx-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "uiUtil" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-ui" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose-material" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }

androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

ffmpeg-kit-full-gpl = { module = "com.arthenica:ffmpeg-kit-full-gpl", version.ref = "ffmpegKitFullGpl" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettingsnoarg = {module ="com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettings"}
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-annotations = {module = "io.insert-koin:koin-annotations" , version.ref = "koin-annotations"}
ksp-compiler = { module  = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations"}
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-driver-sqljs = { module = "app.cash.sqldelight:sqljs-driver", version.ref = "sqlDelight" }
detekt_formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil"}
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil"}

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client_android = {module ="io.ktor:ktor-client-android" ,version.ref = "ktor"}
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-auth = {module = "io.ktor:ktor-client-auth", version.ref = "ktor"}
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor"  }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor"  }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor"  }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic"  }
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

#Test
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk"  }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine"  }
androidx-material3-window-sizeClass = { group = "androidx.compose.material3", name = "material3-window-size-class", version.ref = "material3WindowSizeClass" }


[plugins]
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ksp = {id =  "com.google.devtools.ksp" , version.ref = "ksp"}